/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "wrappedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620025e2380380620025e2833981016040819052620000359162000238565b806040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039080519060200190620000c592919062000192565b508051620000db90600490602084019062000192565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919350919060805230606090811b60c052610120919091529590951b6001600160601b0319166101405250620002a5945050505050565b828054620001a09062000268565b90600052602060002090601f016020900481019282620001c457600085556200020f565b82601f10620001df57805160ff19168380011785556200020f565b828001600101855582156200020f579182015b828111156200020f578251825591602001919060010190620001f2565b506200021d92915062000221565b5090565b5b808211156200021d576000815560010162000222565b6000602082840312156200024a578081fd5b81516001600160a01b038116811462000261578182fd5b9392505050565b600181811c908216806200027d57607f821691505b602082108114156200029f57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160601c60e05161010051610120516101405160601c6122c76200031b600039600081816102aa015281816104b5015281816105110152610f6101526000611081015260006110d0015260006110ab015260006110040152600061102e0152600061105801526122c76000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636f307dc3116100de5780639ab24eb011610097578063c3cda52011610071578063c3cda52014610384578063d505accf14610397578063dd62ed3e146103aa578063f1127ed8146103bd57600080fd5b80639ab24eb01461034b578063a457c2d71461035e578063a9059cbb1461037157600080fd5b80636f307dc3146102a55780636fcfff45146102cc57806370a08231146102f45780637ecebe001461031d5780638e539e8c1461033057806395d89b411461034357600080fd5b8063313ce56711610130578063313ce567146102045780633644e5151461021e57806339509351146102265780633a46b1a814610239578063587cde1e1461024c5780635c19a95c1461029057600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b9578063205c2878146101cb57806323b872dd146101de5780632f4f21e2146101f1575b600080fd5b6101806103fa565b60405161018d9190612189565b60405180910390f35b6101a96101a4366004612059565b61048c565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004612059565b6104a4565b6101a96101ec366004611fb2565b6104e4565b6101a96101ff366004612059565b61050a565b61020c610542565b60405160ff909116815260200161018d565b6101bd610551565b6101a9610234366004612059565b61055b565b6101bd610247366004612059565b61057d565b61027861025a366004611f66565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161018d565b6102a361029e366004611f66565b6105f5565b005b6102787f000000000000000000000000000000000000000000000000000000000000000081565b6102df6102da366004611f66565b610602565b60405163ffffffff909116815260200161018d565b6101bd610302366004611f66565b6001600160a01b031660009081526020819052604090205490565b6101bd61032b366004611f66565b61062a565b6101bd61033e366004612139565b610648565b6101806106a4565b6101bd610359366004611f66565b6106b3565b6101a961036c366004612059565b610748565b6101a961037f366004612059565b6107ce565b6102a3610392366004612082565b6107dc565b6102a36103a5366004611fed565b610912565b6101bd6103b8366004611f80565b610a76565b6103d06103cb3660046120db565b610aa1565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b60606003805461040990612237565b80601f016020809104026020016040519081016040528092919081815260200182805461043590612237565b80156104825780601f1061045757610100808354040283529160200191610482565b820191906000526020600020905b81548152906001019060200180831161046557829003601f168201915b5050505050905090565b60003361049a818585610b33565b5060019392505050565b60006104b03383610c57565b6104db7f00000000000000000000000000000000000000000000000000000000000000008484610c65565b50600192915050565b6000336104f2858285610ccd565b6104fd858585610d47565b60019150505b9392505050565b60006105387f0000000000000000000000000000000000000000000000000000000000000000333085610f1b565b6104db8383610f53565b600061054c610f5d565b905090565b600061054c610ff7565b60003361049a81858561056e8383610a76565b61057891906121bc565b610b33565b60004382106105d35760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610503908361111e565b6105ff33826111f7565b50565b6001600160a01b03811660009081526008602052604081205461062490611270565b92915050565b6001600160a01b038116600090815260056020526040812054610624565b60004382106106995760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105ca565b61062460098361111e565b60606004805461040990612237565b6001600160a01b0381166000908152600860205260408120548015610735576001600160a01b03831660009081526008602052604090206106f56001836121f4565b8154811061071357634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316610738565b60005b6001600160e01b03169392505050565b600033816107568286610a76565b9050838110156107b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105ca565b6107c38286868403610b33565b506001949350505050565b60003361049a818585610d47565b8342111561082c5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105ca565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108a69061089e9060a001604051602081830303815290604052805190602001206112d9565b858585611327565b90506108b18161134f565b86146108ff5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105ca565b61090981886111f7565b50505050505050565b834211156109625760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105ca565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109918c61134f565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109ec826112d9565b905060006109fc82878787611327565b9050896001600160a01b0316816001600160a01b031614610a5f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105ca565b610a6a8a8a8a610b33565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610af357634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610b955760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ca565b6001600160a01b038216610bf65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ca565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610c618282611377565b5050565b6040516001600160a01b038316602482015260448101829052610cc890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261138f565b505050565b6000610cd98484610a76565b90506000198114610d415781811015610d345760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105ca565b610d418484848403610b33565b50505050565b6001600160a01b038316610dab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ca565b6001600160a01b038216610e0d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ca565b6001600160a01b03831660009081526020819052604090205481811015610e855760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ca565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ebc9084906121bc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f0891815260200190565b60405180910390a3610d41848484611461565b6040516001600160a01b0380851660248301528316604482015260648101829052610d419085906323b872dd60e01b90608401610c91565b610c61828261146c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610fb857600080fd5b505afa925050508015610fe8575060408051601f3d908101601f19168201909252610fe591810190612151565b60015b610ff25750601290565b919050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561105057507f000000000000000000000000000000000000000000000000000000000000000046145b1561107a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b8181101561119057600061113982846114f6565b90508486828154811061115c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16111561117c5780925061118a565b6111878160016121bc565b91505b50611125565b81156111e257846111a26001846121f4565b815481106111c057634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b03166111e5565b60005b6001600160e01b031695945050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610d41828483611511565b600063ffffffff8211156112d55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105ca565b5090565b60006106246112e6610ff7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006113388787878761164e565b915091506113458161173b565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b611381828261193c565b610d416009611a9183611a9d565b60006113e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c409092919063ffffffff16565b805190915015610cc857808060200190518101906114029190612119565b610cc85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ca565b610cc8838383611c57565b6114768282611c89565b6002546001600160e01b0310156114e85760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105ca565b610d416009611d7083611a9d565b600061150560028484186121d4565b610503908484166121bc565b816001600160a01b0316836001600160a01b0316141580156115335750600081115b15610cc8576001600160a01b038316156115c1576001600160a01b0383166000908152600860205260408120819061156e90611a9185611a9d565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516115b6929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610cc8576001600160a01b038216600090815260086020526040812081906115f790611d7085611a9d565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161163f929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116855750600090506003611732565b8460ff16601b1415801561169d57508460ff16601c14155b156116ae5750600090506004611732565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611702573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661172b57600060019250925050611732565b9150600090505b94509492505050565b600081600481111561175d57634e487b7160e01b600052602160045260246000fd5b14156117665750565b600181600481111561178857634e487b7160e01b600052602160045260246000fd5b14156117d65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105ca565b60028160048111156117f857634e487b7160e01b600052602160045260246000fd5b14156118465760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105ca565b600381600481111561186857634e487b7160e01b600052602160045260246000fd5b14156118c15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105ca565b60048160048111156118e357634e487b7160e01b600052602160045260246000fd5b14156105ff5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105ca565b6001600160a01b03821661199c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ca565b6001600160a01b03821660009081526020819052604090205481811015611a105760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105ca565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611a3f9084906121f4565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610cc883600084611461565b600061050382846121f4565b825460009081908015611af65785611ab66001836121f4565b81548110611ad457634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316611af9565b60005b6001600160e01b03169250611b1283858763ffffffff16565b9150600081118015611b5e57504386611b2c6001846121f4565b81548110611b4a57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16145b15611bcc57611b6c82611d7c565b86611b786001846121f4565b81548110611b9657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611c37565b856040518060400160405280611be143611270565b63ffffffff168152602001611bf585611d7c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6060611c4f8484600085611de5565b949350505050565b6001600160a01b03838116600090815260076020526040808220548584168352912054610cc892918216911683611511565b6001600160a01b038216611cdf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ca565b8060026000828254611cf191906121bc565b90915550506001600160a01b03821660009081526020819052604081208054839290611d1e9084906121bc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610c6160008383611461565b600061050382846121bc565b60006001600160e01b038211156112d55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105ca565b606082471015611e465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105ca565b6001600160a01b0385163b611e9d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ca565b600080866001600160a01b03168587604051611eb9919061216d565b60006040518083038185875af1925050503d8060008114611ef6576040519150601f19603f3d011682016040523d82523d6000602084013e611efb565b606091505b5091509150611f0b828286611f16565b979650505050505050565b60608315611f25575081610503565b825115611f355782518084602001fd5b8160405162461bcd60e51b81526004016105ca9190612189565b80356001600160a01b0381168114610ff257600080fd5b600060208284031215611f77578081fd5b61050382611f4f565b60008060408385031215611f92578081fd5b611f9b83611f4f565b9150611fa960208401611f4f565b90509250929050565b600080600060608486031215611fc6578081fd5b611fcf84611f4f565b9250611fdd60208501611f4f565b9150604084013590509250925092565b600080600080600080600060e0888a031215612007578283fd5b61201088611f4f565b965061201e60208901611f4f565b95506040880135945060608801359350608088013561203c81612282565b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561206b578182fd5b61207483611f4f565b946020939093013593505050565b60008060008060008060c0878903121561209a578182fd5b6120a387611f4f565b9550602087013594506040870135935060608701356120c181612282565b9598949750929560808101359460a0909101359350915050565b600080604083850312156120ed578182fd5b6120f683611f4f565b9150602083013563ffffffff8116811461210e578182fd5b809150509250929050565b60006020828403121561212a578081fd5b81518015158114610503578182fd5b60006020828403121561214a578081fd5b5035919050565b600060208284031215612162578081fd5b815161050381612282565b6000825161217f81846020870161220b565b9190910192915050565b60208152600082518060208401526121a881604085016020870161220b565b601f01601f19169190910160400192915050565b600082198211156121cf576121cf61226c565b500190565b6000826121ef57634e487b7160e01b81526012600452602481fd5b500490565b6000828210156122065761220661226c565b500390565b60005b8381101561222657818101518382015260200161220e565b83811115610d415750506000910152565b600181811c9082168061224b57607f821691505b6020821081141561137157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff811681146105ff57600080fdfea2646970667358221220ce5c31ae30262dca0d22fd58b95b74c007a935110a4f19ab46d5576df49c3cfc64736f6c63430008040033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    wrappedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(wrappedToken, overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    wrappedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(wrappedToken, overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
